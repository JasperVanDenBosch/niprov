{
  "name": "niprov",
  "tagline": "provenance for neuroimaging data",
  "body": "niprov\r\n======\r\nprovenance for neuroimaging data\r\n\r\n[![PyPI version](https://badge.fury.io/py/niprov.svg)](http://badge.fury.io/py/niprov)\r\n[![Build](https://travis-ci.org/ilogue/niprov.svg?branch=master)](https://travis-ci.org/ilogue/niprov)\r\n[![Docs](https://readthedocs.org/projects/niprov/badge/?version=latest)](http://niprov.readthedocs.org/)\r\n[![Coverage](https://img.shields.io/coveralls/ilogue/niprov.svg)](https://coveralls.io/r/ilogue/niprov)\r\n[![Code Quality](https://scrutinizer-ci.com/g/ilogue/niprov/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/ilogue/niprov/?branch=master)\r\n\r\n[![Research software impact](http://depsy.org/api/package/pypi/niprov/badge.svg)](http://depsy.org/package/python/niprov)\r\n[![DOI](https://zenodo.org/badge/doi/10.5281/zenodo.46136.svg)](http://dx.doi.org/10.5281/zenodo.46136)\r\n[![Twitter](https://img.shields.io/twitter/follow/niprovenance.svg?style=social)](https://twitter.com/niprovenance)\r\n\r\nEver encountered a file of which you weren’t sure what analysis steps it had gone through? \r\nEver wanted to know what types of data you have available for a subject in one overview? \r\nAutomatically document an analysis pipeline?\r\n\r\nProvenance is meta-data that tracks the ‘history’ of a file, and niprov is a python program to create, store and publish provenance for brain imaging files.\r\n\r\nA list with all provenance attributes collected can be found [here](http://niprov.readthedocs.org/en/latest/provenance-fields.html).\r\nRead more in the [full online documentation](http://niprov.readthedocs.org/) (or [pdf](https://media.readthedocs.org/pdf/niprov/latest/niprov.pdf)).\r\nFor additional detailed information on image files, install `nibabel`,`mne` and/or `pydicom`.\r\n\r\n\r\n\r\nCommandline Usage\r\n-----------------\r\n\r\nInstall niprov:\r\n```shell\r\npip install niprov\r\n```\r\n\r\nLook for existing image files in your data directory:\r\n```shell\r\nprovenance discover /my/data/directory\r\n```\r\n\r\nRun a transformation command and log it as provenance for the new file:\r\n```shell\r\nprovenance record mcflirt -in t1flip_all_orig -out t1all_reg -refvol 0\r\n```\r\n\r\nStore provenance of known MEG files as an xml file:\r\n```shell\r\nprovenance export --modality \"MEG\" --xml\r\n```\r\n\r\nPython API\r\n----------\r\n\r\n```python\r\nimport niprov\r\nprovenance = niprov.ProvenanceContext()\r\n\r\n# Log an analysis step:\r\nsomeAnalysisPackage.correctmotion(input='JD-fmri.nii', output='JD-fmri-3dmc.nii')\r\nprovenance.log('JD-fmri.nii', 'motion correction', ['JD-fmri-3dmc.nii'])\r\n\r\n# Loop over images of John Smith and display a preview:\r\nfor image in provenance.get().bySubject('John Smith'):\r\n    image.viewSnapshot() \r\n\r\n# Make sure two files were acquired with the same parameters:\r\nimg1.compare(img2).assertEqualProtocol()\r\n```\r\n\r\nWeb browser\r\n-----------\r\n\r\nBy running the command `provenance serve` you can start a mini webserver in the\r\nbackground, and browse images in your webbrowser:\r\n\r\n![niprov_search](https://cloud.githubusercontent.com/assets/1508492/16635983/2c4c78fe-438a-11e6-868d-51d26c9956cf.png)\r\n![niprov_details](https://cloud.githubusercontent.com/assets/1508492/16635948/f962ff1c-4389-11e6-958b-59a8fd9de9cd.png)\r\n![niprov_pipeline](https://cloud.githubusercontent.com/assets/1508492/16635949/faa0c8b4-4389-11e6-87ae-87dce26c9973.png)\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}